spring:
  application:
    name: producer-service
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        enabled: true
        health-check-path: /actuator/health
        health-check-interval: 30s
    openfeign:
      circuitbreaker:
        enabled: true
    stream:
      bindings:
        jsonOutput:
          destination: my-topic-json
          content-type: application/json
          producer:
            useNativeEncoding: true
        stringOutput:
          destination: my-topic-string
          content-type: text/plain
          producer:
            useNativeEncoding: true
        byteOutput:
          destination: my-topic-byte
          content-type: application/octet-stream
          producer:
            useNativeEncoding: true
      kafka:
        binder:
          brokers: localhost:9093
          configuration:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.springframework.kafka.support.serializer.JsonSerializer  # JSON 預設
            # byte[] 和 String 會根據 content-type 動態調整
resilience4j:
  circuitbreaker:
    instances:
      default:             # 定義一個名為 "default" 的斷路器實例，應用於所有 Feign 客戶端（除非特別指定）
        registerHealthIndicator: true  # 在 Spring Boot Actuator 中註冊健康指標，可以通過 /actuator/health 查看斷路器狀態
        slidingWindowSize: 10          # 滑動窗口大小，記錄最近 10 次調用用於計算失敗率
        failureRateThreshold: 50       # 失敗率閾值（百分比），當失敗率超過 50% 時斷路器跳閘（進入 OPEN 狀態）
        waitDurationInOpenState: 10000ms  # 斷路器處於 OPEN 狀態的等待時間（10 秒），在此期間拒絕所有請求
        permittedNumberOfCallsInHalfOpenState: 3  # HALF_OPEN 狀態下允許的請求數，用於測試服務是否恢復
  retry:
    instances:
      default:             # 定義一個名為 "default" 的重試實例，應用於所有 Feign 客戶端（除非特別指定）
        maxAttempts: 3     # 最大重試次數，若請求失敗，最多重試 3 次（總共 4 次請求：初次 + 3 次重試）
        waitDuration: 500ms  # 每次重試之間的等待時間，設為 500 毫秒
management:
  endpoints:
    web:
      exposure:
        include: health,info  # 暴露 Spring Boot Actuator 的端點，這裡啟用了 /actuator/health 和 /actuator/info
  tracing:
    sampling:
      probability: 1.0  # 設定追蹤樣本比例，1.0 表示 100% 追蹤所有請求
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans  # Zipkin 的端點，用於接收追蹤資料
server:
  port: 8081                # 服務運行的端口號，設定為 8081