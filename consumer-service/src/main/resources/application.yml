spring:
  application:
    name: consumer-service  # 應用程序的名稱，建議使用小寫，避免潛在的兼容性問題（例如 Consul 或其他服務發現工具可能對大小寫敏感）
  cloud:
    consul:
      host: localhost       # Consul 服務的主機地址，這裡設定為本地主機（localhost）
      port: 8500            # Consul 服務的端口號，預設為 8500
      discovery:
        enabled: true       # 啟用 Consul 服務發現功能，允許此服務註冊到 Consul
        health-check-path: /actuator/health  # 健康檢查的路徑，Consul 會定期訪問此端點以檢查服務狀態
        health-check-interval: 30s           # 健康檢查的間隔時間，每 30 秒檢查一次服務健康狀況
    stream:
      bindings:
        jsonInput:
          destination: my-topic-json
          group: my-group
          content-type: application/json
        stringInput:
          destination: my-topic-string
          group: my-group
          content-type: text/plain
        byteInput:
          destination: my-topic-byte
          group: my-group
          content-type: application/octet-stream
      kafka:
        binder:
          brokers: localhost:9093
          configuration:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer  # JSON 預設
            spring.json.trusted.packages: com.example.consumerService
management:
  endpoints:
    web:
      exposure:
        include: health,info  # 暴露 Spring Boot Actuator 的端點，這裡啟用了 /actuator/health 和 /actuator/info
  tracing:
    sampling:
      probability: 1.0  # 設定追蹤樣本比例，1.0 表示 100% 追蹤所有請求
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans  # Zipkin 的端點，用於接收追蹤資料
server:
  port: 8082                # 服務運行的端口號，設定為 8082