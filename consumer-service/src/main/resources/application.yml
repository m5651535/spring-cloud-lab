spring:
  application:
    name: consumer-service  # 應用程序的名稱，建議使用小寫，避免潛在的兼容性問題（例如 Consul 或其他服務發現工具可能對大小寫敏感）
  cloud:
    consul:
      host: localhost       # Consul 服務的主機地址，這裡設定為本地主機（localhost）
      port: 8500            # Consul 服務的端口號，預設為 8500
      discovery:
        enabled: true       # 啟用 Consul 服務發現功能，允許此服務註冊到 Consul
        health-check-path: /actuator/health  # 健康檢查的路徑，Consul 會定期訪問此端點以檢查服務狀態
        health-check-interval: 30s           # 健康檢查的間隔時間，每 30 秒檢查一次服務健康狀況
    openfeign:
      circuitbreaker:
        enabled: true       # 啟用 OpenFeign 的斷路器支持，與 Resilience4j 整合以處理服務調用失敗
resilience4j:
  circuitbreaker:
    instances:
      default:             # 定義一個名為 "default" 的斷路器實例，應用於所有 Feign 客戶端（除非特別指定）
        registerHealthIndicator: true  # 在 Spring Boot Actuator 中註冊健康指標，可以通過 /actuator/health 查看斷路器狀態
        slidingWindowSize: 10          # 滑動窗口大小，記錄最近 10 次調用用於計算失敗率
        failureRateThreshold: 50       # 失敗率閾值（百分比），當失敗率超過 50% 時斷路器跳閘（進入 OPEN 狀態）
        waitDurationInOpenState: 10000ms  # 斷路器處於 OPEN 狀態的等待時間（10 秒），在此期間拒絕所有請求
        permittedNumberOfCallsInHalfOpenState: 3  # HALF_OPEN 狀態下允許的請求數，用於測試服務是否恢復
  retry:
    instances:
      default:             # 定義一個名為 "default" 的重試實例，應用於所有 Feign 客戶端（除非特別指定）
        maxAttempts: 3     # 最大重試次數，若請求失敗，最多重試 3 次（總共 4 次請求：初次 + 3 次重試）
        waitDuration: 500ms  # 每次重試之間的等待時間，設為 500 毫秒
management:
  endpoints:
    web:
      exposure:
        include: health,info  # 暴露 Spring Boot Actuator 的端點，這裡啟用了 /actuator/health 和 /actuator/info
  tracing:
    sampling:
      probability: 1.0  # 設定追蹤樣本比例，1.0 表示 100% 追蹤所有請求
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans  # Zipkin 的端點，用於接收追蹤資料
server:
  port: 8081                # 服務運行的端口號，設定為 8081